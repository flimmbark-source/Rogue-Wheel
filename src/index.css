@tailwind base;
@tailwind components;
@tailwind utilities;

/*
 * Global styles for the Roguelike Wheel game.  This file sets up a dark
 * background and light text by default and applies the custom fonts from
 * tailwind.config.js.  It also includes typographic rules for headings.
 */

:root {
  --app-min-height: min(100vh, 1600px);
  --app-max-width: min(100vw, 720px);
}

@supports (height: 100svh) {
  :root {
    --app-min-height: min(100svh, 1600px);
  }
}

@supports (height: 100dvh) {
  :root {
    --app-min-height: min(100dvh, 1600px);
  }
}

@supports (width: 100svw) {
  :root {
    --app-max-width: min(100svw, 720px);
  }
}

@supports (width: 100dvw) {
  :root {
    --app-max-width: min(100dvw, 720px);
  }
}

html,
body,
#root {
  min-height: 100vh;
  min-height: var(--app-min-height, 100vh);
  width: 100%;
}

body {
  /* Apply a warm wood background texture across the entire game.  The dark
   * slate fallback ensures the UI remains legible if the image fails to
   * load.  Text uses the custom font defined in tailwind.config.js. */
  @apply bg-slate-900 text-slate-200 font-text;
  background-image: url("/assets/Desk.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

@media (max-width: 768px) {
  body {
    /* On narrow screens the focal point of the desk background sits higher
     * in the frame. Anchor the image to the top center so the important
     * details line up with the play area instead of drifting off screen. */
    background-position: top center;
  }
}

h1, h2, h3, h4, h5, h6 {
  @apply font-heading;
}

/* Panels (HUD) */
.panel {
  @apply bg-panel rounded-xl shadow-md p-3 flex flex-col gap-1;
}

/* Cards in the player's hand */
.card {
  @apply bg-surface rounded-lg shadow-inner p-2 flex items-center justify-center text-xl font-bold text-white transition-transform duration-150;
}
.card:hover {
  @apply scale-105;
}

/* Action buttons */
.btn-primary {
  @apply bg-primary text-slate-900 rounded px-4 py-2 hover:bg-primary/80 transition-colors duration-150;
}
.btn-secondary {
  @apply bg-secondary text-slate-900 rounded px-4 py-2 hover:bg-secondary/80 transition-colors duration-150;
}

/*
 * Wood-themed frames for wheels and card slots.
 */
div.relative[data-drop="wheel"][aria-label^="Wheel"] {
  background-image: url("/assets/wheel-frame.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  padding: 0.5rem;
}

/* Player and enemy card slots */
[aria-label$="player slot"],
[aria-label$="enemy slot"] {
  position: relative;
  background-color: transparent;
  border: none;
}

[aria-label$="player slot"]::before,
[aria-label$="enemy slot"]::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image: url("/assets/card-frame.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: inherit;
  pointer-events: none;
  transform-origin: center;
  z-index: 0;
}

[aria-label$="player slot"] > *,
[aria-label$="enemy slot"] > * {
  position: relative;
  z-index: 1;
}

[aria-label$="right slot"]::before {
  transform: scaleX(-1);
}

/*
 * Cards in the player's hand.
 * Each card is a <button> with an aria-label beginning with "Card".
 * Apply the wood frame image as the background, hide the gradient overlays,
 * and set the number color to a light parchment tone.
 */
button[aria-label^="Card"] {
  background-image: url("/assets/card-frame.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  border: none;
}
button[aria-label^="Card"] > div:first-child {
  opacity: 0;
}
button[aria-label^="Card"] > div:nth-child(2) {
  background-color: transparent;
  border: none;
}
[data-spells-enabled="false"] .card-arcana {
  display: none;
}

/* Add margin below the last wheel to prevent overlap with the player's hand */
div.relative[aria-label^="Wheel"]:last-of-type {
  margin-bottom: 1rem;
}

@keyframes skill-pop {
  0% {
    transform: scale(0.6);
    opacity: 0;
  }
  35% {
    transform: scale(1.15);
    opacity: 1;
  }
  70% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.9);
    opacity: 0;
  }
}

.skill-pop {
  animation: skill-pop 0.95s ease-out forwards;
}

